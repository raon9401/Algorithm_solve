/*
       행렬 곱셈
   a의 열과 b의 행의 크기가 같아야함
   [3*2]a    [2*2]b
    1 4       3 3
    3 2       3 3 
    4 1

    3(a의 행) * 2(b의 열)크기의 행렬 생성 :  c
    [1*3+4*3] [1*3+4*3]   
    [3*3+3*2] [3*3+2*3]
    [4*3+1*3] [4*3+1*3]

    a의 열과 b의 행이 같아야함.
      a     b       a     b        a     b       a     b
    [0,0]*[0,0] + [0,1]*[1,0]    [0,0]*[0,1] + [0,1]*[1,1] 
    [1,0]*[0,0] + [1,1]*[1,0]    [1,0]*[0,1] + [1,1]*[1,1]
    [2,0]*[0,0] + [2,1]*[1,0]    [2,0]*[0,1] + [2,1]*[1,1]

    c[0,0] -> [0,0]*[0,0] + [0,1]*[1,0] 
    c[0,1] -> [0,0]*[0,1] + [0,1]*[1,1]
    c[1,0] -> [1,0]*[0,0] + [1,1]*[1,0]
    c[1,1] -> [1,0]*[0,1] + [1,1]*[1,1]

    ...
    1번째 기준 : a의 행을 순회 - i
    2번째 기준 : b의 열을 순회 - j
    3번째 기준 : a의 열 또는 b의 행을 순회(같아야 하는 수) - k
*/

function solution(arr1, arr2) {
  let answer = [];
  let arr = [];
  let sum = 0;
  for (let i = 0; i < arr1.length; i++) {
    for (let j = 0; j < arr2[0].length; j++) {
      for (let k = 0; k < arr2.length; k++) {
        sum += arr1[i][k] * arr2[k][j];
      }
      // console.log(sum, k, i);
      arr.push(sum);
      sum = 0;
    }
    // console.log(arr);
    answer.push(arr);
    arr = [];
  }
  return answer;
}

console.table(
  solution(
    [
      [2, 3, 2],
      [4, 2, 4],
      [3, 1, 4],
    ],
    [
      [5, 4, 3],
      [2, 4, 1],
      [3, 1, 1],
    ]
  )
);
/*
[
  [22, 22, 11],
  [36, 28, 18],
  [29, 20, 14],
];
*/
